//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Default.aspx.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/", ConfigurationName="ServiceReference1.ServicioInventarioSoap")]
    public interface ServicioInventarioSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AccesoPortal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccesoPortal(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AccesoPortal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AccesoPortalAsync(string Usuario, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneRutas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneRutas(string id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneRutas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneRutasAsync(string id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePuntosVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtienePuntosVenta(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePuntosVenta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtienePuntosVentaAsync(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductosPV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneProductosPV(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductosPV", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosPVAsync(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneDetalleProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneDetalleProducto(string id_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneDetalleProducto", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneDetalleProductoAsync(string id_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneAtribDisponibles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneAtribDisponibles(string id_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneAtribDisponibles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneAtribDisponiblesAsync(string id_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductosDisponibles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneProductosDisponibles(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductosDisponibles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosDisponiblesAsync(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneProductos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneProductos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneUsuarios", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneUsuarios", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosPuntosVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneTodosPuntosVenta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosPuntosVenta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosPuntosVentaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePerfiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtienePerfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePerfiles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtienePerfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodasRutas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneTodasRutas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodasRutas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodasRutasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosPromotores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneTodosPromotores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosPromotores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosPromotoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePuntosVentaDisponibles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtienePuntosVentaDisponibles(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePuntosVentaDisponibles", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtienePuntosVentaDisponiblesAsync(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneIdUsuarioPorNombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneIdUsuarioPorNombre(string nombre_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneIdUsuarioPorNombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneIdUsuarioPorNombreAsync(string nombre_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneIdPerfilPorNombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneIdPerfilPorNombre(string perfil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneIdPerfilPorNombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneIdPerfilPorNombreAsync(string perfil);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosAtributos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneTodosAtributos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneTodosAtributos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosAtributosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtienePassword(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtienePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtienePasswordAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/CapturarProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CapturarProducto(string id_producto, string id_atributo, string detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/CapturarProducto", ReplyAction="*")]
        System.Threading.Tasks.Task CapturarProductoAsync(string id_producto, string id_atributo, string detalle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AltaUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AltaUsuario(string login, string password, string email, string id_perfil, string nombre, string Apellidos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AltaUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task AltaUsuarioAsync(string login, string password, string email, string id_perfil, string nombre, string Apellidos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddRuta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddRuta(string nombre_ruta, string fecha, string id_promotor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddRuta", ReplyAction="*")]
        System.Threading.Tasks.Task AddRutaAsync(string nombre_ruta, string fecha, string id_promotor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddRutaPuntoVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddRutaPuntoVenta(string id_ruta, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddRutaPuntoVenta", ReplyAction="*")]
        System.Threading.Tasks.Task AddRutaPuntoVentaAsync(string id_ruta, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddAtribProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddAtribProducto(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AddAtribProducto", ReplyAction="*")]
        System.Threading.Tasks.Task AddAtribProductoAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditaUsuario(string id_usuario, string login, string password, string email, string status, string id_perfil, string nombre, string Apellidos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task EditaUsuarioAsync(string id_usuario, string login, string password, string email, string status, string id_perfil, string nombre, string Apellidos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaRuta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditaRuta(string id_ruta, string nombre_ruta, string fecha, string estatus, string id_promotor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaRuta", ReplyAction="*")]
        System.Threading.Tasks.Task EditaRutaAsync(string id_ruta, string nombre_ruta, string fecha, string estatus, string id_promotor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditAtribProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditAtribProducto(string id_atributo, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditAtribProducto", ReplyAction="*")]
        System.Threading.Tasks.Task EditAtribProductoAsync(string id_atributo, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BajaUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BajaUsuario(string id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BajaUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task BajaUsuarioAsync(string id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorraRuta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BorraRuta(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorraRuta", ReplyAction="*")]
        System.Threading.Tasks.Task BorraRutaAsync(string id_ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorraRutaPuntoVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BorraRutaPuntoVenta(string id_ruta, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorraRutaPuntoVenta", ReplyAction="*")]
        System.Threading.Tasks.Task BorraRutaPuntoVentaAsync(string id_ruta, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AsignaProductoPV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AsignaProductoPV(string id_cat_producto, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AsignaProductoPV", ReplyAction="*")]
        System.Threading.Tasks.Task AsignaProductoPVAsync(string id_cat_producto, string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AgregarProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AgregarProducto(string nombre_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AgregarProducto", ReplyAction="*")]
        System.Threading.Tasks.Task AgregarProductoAsync(string nombre_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AltaPuntoVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AltaPuntoVenta(string nombre_pv, string direccion_pv, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/AltaPuntoVenta", ReplyAction="*")]
        System.Threading.Tasks.Task AltaPuntoVentaAsync(string nombre_pv, string direccion_pv, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditarProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditarProducto(string nombre_producto, string id_cat_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditarProducto", ReplyAction="*")]
        System.Threading.Tasks.Task EditarProductoAsync(string nombre_producto, string id_cat_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaPuntoVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditaPuntoVenta(string id_punto_venta, string nombre_pv, string direccion_pv, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/EditaPuntoVenta", ReplyAction="*")]
        System.Threading.Tasks.Task EditaPuntoVentaAsync(string id_punto_venta, string nombre_pv, string direccion_pv, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorrarProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BorrarProducto(string id_cat_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorrarProducto", ReplyAction="*")]
        System.Threading.Tasks.Task BorrarProductoAsync(string id_cat_producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorrarPuntoVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BorrarPuntoVenta(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/BorrarPuntoVenta", ReplyAction="*")]
        System.Threading.Tasks.Task BorrarPuntoVentaAsync(string id_punto_venta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneCatlogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneCatlogin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneCatlogin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneCatloginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/CargaLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CargaLote(string id_usuario, string nombre_ruta, string nombre_pv, string direccion_pv, string descripcion, string nombre_producto, string atributo, string valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/CargaLote", ReplyAction="*")]
        System.Threading.Tasks.Task CargaLoteAsync(string id_usuario, string nombre_ruta, string nombre_pv, string direccion_pv, string descripcion, string nombre_producto, string atributo, string valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneLoteOffline", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtieneLoteOffline(string id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/ObtieneLoteOffline", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtieneLoteOfflineAsync(string id_usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicioInventarioSoapChannel : ServiceReference1.ServicioInventarioSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioInventarioSoapClient : System.ServiceModel.ClientBase<ServiceReference1.ServicioInventarioSoap>, ServiceReference1.ServicioInventarioSoap {
        
        public ServicioInventarioSoapClient() {
        }
        
        public ServicioInventarioSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioInventarioSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioInventarioSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioInventarioSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet AccesoPortal(string Usuario, string Password) {
            return base.Channel.AccesoPortal(Usuario, Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AccesoPortalAsync(string Usuario, string Password) {
            return base.Channel.AccesoPortalAsync(Usuario, Password);
        }
        
        public System.Data.DataSet ObtieneRutas(string id_usuario) {
            return base.Channel.ObtieneRutas(id_usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneRutasAsync(string id_usuario) {
            return base.Channel.ObtieneRutasAsync(id_usuario);
        }
        
        public System.Data.DataSet ObtienePuntosVenta(string id_ruta) {
            return base.Channel.ObtienePuntosVenta(id_ruta);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtienePuntosVentaAsync(string id_ruta) {
            return base.Channel.ObtienePuntosVentaAsync(id_ruta);
        }
        
        public System.Data.DataSet ObtieneProductosPV(string id_punto_venta) {
            return base.Channel.ObtieneProductosPV(id_punto_venta);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosPVAsync(string id_punto_venta) {
            return base.Channel.ObtieneProductosPVAsync(id_punto_venta);
        }
        
        public System.Data.DataSet ObtieneDetalleProducto(string id_producto) {
            return base.Channel.ObtieneDetalleProducto(id_producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneDetalleProductoAsync(string id_producto) {
            return base.Channel.ObtieneDetalleProductoAsync(id_producto);
        }
        
        public System.Data.DataSet ObtieneAtribDisponibles(string id_producto) {
            return base.Channel.ObtieneAtribDisponibles(id_producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneAtribDisponiblesAsync(string id_producto) {
            return base.Channel.ObtieneAtribDisponiblesAsync(id_producto);
        }
        
        public System.Data.DataSet ObtieneProductosDisponibles(string id_punto_venta) {
            return base.Channel.ObtieneProductosDisponibles(id_punto_venta);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosDisponiblesAsync(string id_punto_venta) {
            return base.Channel.ObtieneProductosDisponiblesAsync(id_punto_venta);
        }
        
        public System.Data.DataSet ObtieneProductos() {
            return base.Channel.ObtieneProductos();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneProductosAsync() {
            return base.Channel.ObtieneProductosAsync();
        }
        
        public System.Data.DataSet ObtieneUsuarios() {
            return base.Channel.ObtieneUsuarios();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneUsuariosAsync() {
            return base.Channel.ObtieneUsuariosAsync();
        }
        
        public System.Data.DataSet ObtieneTodosPuntosVenta() {
            return base.Channel.ObtieneTodosPuntosVenta();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosPuntosVentaAsync() {
            return base.Channel.ObtieneTodosPuntosVentaAsync();
        }
        
        public System.Data.DataSet ObtienePerfiles() {
            return base.Channel.ObtienePerfiles();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtienePerfilesAsync() {
            return base.Channel.ObtienePerfilesAsync();
        }
        
        public System.Data.DataSet ObtieneTodasRutas() {
            return base.Channel.ObtieneTodasRutas();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodasRutasAsync() {
            return base.Channel.ObtieneTodasRutasAsync();
        }
        
        public System.Data.DataSet ObtieneTodosPromotores() {
            return base.Channel.ObtieneTodosPromotores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosPromotoresAsync() {
            return base.Channel.ObtieneTodosPromotoresAsync();
        }
        
        public System.Data.DataSet ObtienePuntosVentaDisponibles(string id_ruta) {
            return base.Channel.ObtienePuntosVentaDisponibles(id_ruta);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtienePuntosVentaDisponiblesAsync(string id_ruta) {
            return base.Channel.ObtienePuntosVentaDisponiblesAsync(id_ruta);
        }
        
        public System.Data.DataSet ObtieneIdUsuarioPorNombre(string nombre_usuario) {
            return base.Channel.ObtieneIdUsuarioPorNombre(nombre_usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneIdUsuarioPorNombreAsync(string nombre_usuario) {
            return base.Channel.ObtieneIdUsuarioPorNombreAsync(nombre_usuario);
        }
        
        public System.Data.DataSet ObtieneIdPerfilPorNombre(string perfil) {
            return base.Channel.ObtieneIdPerfilPorNombre(perfil);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneIdPerfilPorNombreAsync(string perfil) {
            return base.Channel.ObtieneIdPerfilPorNombreAsync(perfil);
        }
        
        public System.Data.DataSet ObtieneTodosAtributos() {
            return base.Channel.ObtieneTodosAtributos();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneTodosAtributosAsync() {
            return base.Channel.ObtieneTodosAtributosAsync();
        }
        
        public System.Data.DataSet ObtienePassword(string email) {
            return base.Channel.ObtienePassword(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtienePasswordAsync(string email) {
            return base.Channel.ObtienePasswordAsync(email);
        }
        
        public void CapturarProducto(string id_producto, string id_atributo, string detalle) {
            base.Channel.CapturarProducto(id_producto, id_atributo, detalle);
        }
        
        public System.Threading.Tasks.Task CapturarProductoAsync(string id_producto, string id_atributo, string detalle) {
            return base.Channel.CapturarProductoAsync(id_producto, id_atributo, detalle);
        }
        
        public void AltaUsuario(string login, string password, string email, string id_perfil, string nombre, string Apellidos) {
            base.Channel.AltaUsuario(login, password, email, id_perfil, nombre, Apellidos);
        }
        
        public System.Threading.Tasks.Task AltaUsuarioAsync(string login, string password, string email, string id_perfil, string nombre, string Apellidos) {
            return base.Channel.AltaUsuarioAsync(login, password, email, id_perfil, nombre, Apellidos);
        }
        
        public void AddRuta(string nombre_ruta, string fecha, string id_promotor) {
            base.Channel.AddRuta(nombre_ruta, fecha, id_promotor);
        }
        
        public System.Threading.Tasks.Task AddRutaAsync(string nombre_ruta, string fecha, string id_promotor) {
            return base.Channel.AddRutaAsync(nombre_ruta, fecha, id_promotor);
        }
        
        public void AddRutaPuntoVenta(string id_ruta, string id_punto_venta) {
            base.Channel.AddRutaPuntoVenta(id_ruta, id_punto_venta);
        }
        
        public System.Threading.Tasks.Task AddRutaPuntoVentaAsync(string id_ruta, string id_punto_venta) {
            return base.Channel.AddRutaPuntoVentaAsync(id_ruta, id_punto_venta);
        }
        
        public void AddAtribProducto(string nombre) {
            base.Channel.AddAtribProducto(nombre);
        }
        
        public System.Threading.Tasks.Task AddAtribProductoAsync(string nombre) {
            return base.Channel.AddAtribProductoAsync(nombre);
        }
        
        public void EditaUsuario(string id_usuario, string login, string password, string email, string status, string id_perfil, string nombre, string Apellidos) {
            base.Channel.EditaUsuario(id_usuario, login, password, email, status, id_perfil, nombre, Apellidos);
        }
        
        public System.Threading.Tasks.Task EditaUsuarioAsync(string id_usuario, string login, string password, string email, string status, string id_perfil, string nombre, string Apellidos) {
            return base.Channel.EditaUsuarioAsync(id_usuario, login, password, email, status, id_perfil, nombre, Apellidos);
        }
        
        public void EditaRuta(string id_ruta, string nombre_ruta, string fecha, string estatus, string id_promotor) {
            base.Channel.EditaRuta(id_ruta, nombre_ruta, fecha, estatus, id_promotor);
        }
        
        public System.Threading.Tasks.Task EditaRutaAsync(string id_ruta, string nombre_ruta, string fecha, string estatus, string id_promotor) {
            return base.Channel.EditaRutaAsync(id_ruta, nombre_ruta, fecha, estatus, id_promotor);
        }
        
        public void EditAtribProducto(string id_atributo, string nombre) {
            base.Channel.EditAtribProducto(id_atributo, nombre);
        }
        
        public System.Threading.Tasks.Task EditAtribProductoAsync(string id_atributo, string nombre) {
            return base.Channel.EditAtribProductoAsync(id_atributo, nombre);
        }
        
        public void BajaUsuario(string id_usuario) {
            base.Channel.BajaUsuario(id_usuario);
        }
        
        public System.Threading.Tasks.Task BajaUsuarioAsync(string id_usuario) {
            return base.Channel.BajaUsuarioAsync(id_usuario);
        }
        
        public void BorraRuta(string id_ruta) {
            base.Channel.BorraRuta(id_ruta);
        }
        
        public System.Threading.Tasks.Task BorraRutaAsync(string id_ruta) {
            return base.Channel.BorraRutaAsync(id_ruta);
        }
        
        public void BorraRutaPuntoVenta(string id_ruta, string id_punto_venta) {
            base.Channel.BorraRutaPuntoVenta(id_ruta, id_punto_venta);
        }
        
        public System.Threading.Tasks.Task BorraRutaPuntoVentaAsync(string id_ruta, string id_punto_venta) {
            return base.Channel.BorraRutaPuntoVentaAsync(id_ruta, id_punto_venta);
        }
        
        public void AsignaProductoPV(string id_cat_producto, string id_punto_venta) {
            base.Channel.AsignaProductoPV(id_cat_producto, id_punto_venta);
        }
        
        public System.Threading.Tasks.Task AsignaProductoPVAsync(string id_cat_producto, string id_punto_venta) {
            return base.Channel.AsignaProductoPVAsync(id_cat_producto, id_punto_venta);
        }
        
        public void AgregarProducto(string nombre_producto) {
            base.Channel.AgregarProducto(nombre_producto);
        }
        
        public System.Threading.Tasks.Task AgregarProductoAsync(string nombre_producto) {
            return base.Channel.AgregarProductoAsync(nombre_producto);
        }
        
        public void AltaPuntoVenta(string nombre_pv, string direccion_pv, string descripcion) {
            base.Channel.AltaPuntoVenta(nombre_pv, direccion_pv, descripcion);
        }
        
        public System.Threading.Tasks.Task AltaPuntoVentaAsync(string nombre_pv, string direccion_pv, string descripcion) {
            return base.Channel.AltaPuntoVentaAsync(nombre_pv, direccion_pv, descripcion);
        }
        
        public void EditarProducto(string nombre_producto, string id_cat_producto) {
            base.Channel.EditarProducto(nombre_producto, id_cat_producto);
        }
        
        public System.Threading.Tasks.Task EditarProductoAsync(string nombre_producto, string id_cat_producto) {
            return base.Channel.EditarProductoAsync(nombre_producto, id_cat_producto);
        }
        
        public void EditaPuntoVenta(string id_punto_venta, string nombre_pv, string direccion_pv, string descripcion) {
            base.Channel.EditaPuntoVenta(id_punto_venta, nombre_pv, direccion_pv, descripcion);
        }
        
        public System.Threading.Tasks.Task EditaPuntoVentaAsync(string id_punto_venta, string nombre_pv, string direccion_pv, string descripcion) {
            return base.Channel.EditaPuntoVentaAsync(id_punto_venta, nombre_pv, direccion_pv, descripcion);
        }
        
        public void BorrarProducto(string id_cat_producto) {
            base.Channel.BorrarProducto(id_cat_producto);
        }
        
        public System.Threading.Tasks.Task BorrarProductoAsync(string id_cat_producto) {
            return base.Channel.BorrarProductoAsync(id_cat_producto);
        }
        
        public void BorrarPuntoVenta(string id_punto_venta) {
            base.Channel.BorrarPuntoVenta(id_punto_venta);
        }
        
        public System.Threading.Tasks.Task BorrarPuntoVentaAsync(string id_punto_venta) {
            return base.Channel.BorrarPuntoVentaAsync(id_punto_venta);
        }
        
        public System.Data.DataSet ObtieneCatlogin() {
            return base.Channel.ObtieneCatlogin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneCatloginAsync() {
            return base.Channel.ObtieneCatloginAsync();
        }
        
        public void CargaLote(string id_usuario, string nombre_ruta, string nombre_pv, string direccion_pv, string descripcion, string nombre_producto, string atributo, string valor) {
            base.Channel.CargaLote(id_usuario, nombre_ruta, nombre_pv, direccion_pv, descripcion, nombre_producto, atributo, valor);
        }
        
        public System.Threading.Tasks.Task CargaLoteAsync(string id_usuario, string nombre_ruta, string nombre_pv, string direccion_pv, string descripcion, string nombre_producto, string atributo, string valor) {
            return base.Channel.CargaLoteAsync(id_usuario, nombre_ruta, nombre_pv, direccion_pv, descripcion, nombre_producto, atributo, valor);
        }
        
        public System.Data.DataSet ObtieneLoteOffline(string id_usuario) {
            return base.Channel.ObtieneLoteOffline(id_usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtieneLoteOfflineAsync(string id_usuario) {
            return base.Channel.ObtieneLoteOfflineAsync(id_usuario);
        }
    }
}
